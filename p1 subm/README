EE 122 Fall 2012
Project 1

Partners:
=======================
Eugene Huang (ee122-en)
Bhavik Singh (ee122-js)

Sender.py challenges
=====================

Implementation of the Sender class was relatively straightforward, but we ran into a few issues.

1. The first was how to resend packets. In our implementation packets are being read in from a stream. Once we read in one packet of data from the stream and sent it, if the sending failed and we needed to resend there was no way to re-access the stream to get the data. Thus we began hashing (or storing) packets that we were sending, and if a packet had to be resent, its data would be read from the hash. We also delete all elements from the hash that are not required, ie: all items in the hash for whom we've received an ack for.

2. The second was dealing with packets near the end of the data stream. Once we've sent the last packet, we need to make sure we received an ack for it. If we didn't receive an ack, we move the window up to the last packet whose ack was received, send it and send 5 packets after it. However you run into an issue if your ack was within the last 5 packets (eg: the second last packet) and this needs to be dealt with carefully.

